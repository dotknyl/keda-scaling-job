apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: scaled-job
  namespace: erm-dev
spec:
  jobTargetRef:
    parallelism: 2 # [max number of desired pods](https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#controlling-parallelism)
    completions: 2 # [desired number of successfully finished pods](https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#controlling-parallelism)
    activeDeadlineSeconds: 600 #  Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
    backoffLimit: 6 # Specifies the number of retries before marking this job failed. Defaults to 6
    template:
      spec:
        containers:
          - name: keda-scaling-job
            image: dotknyl/keda-scaling-job:latest
            imagePullPolicy: Always
        restartPolicy: OnFailure
  pollingInterval: 10 # Optional. Default: 30 seconds
  successfulJobsHistoryLimit: 2 # Optional. Default: 100. How many completed jobs should be kept.
  failedJobsHistoryLimit: 2 # Optional. Default: 100. How many failed jobs should be kept.
  minReplicaCount: 1 # Optional. Default: 0
  maxReplicaCount: 2 # Optional. Default: 100
  rollout:
    strategy: gradual # Optional. Default: default. Which Rollout Strategy KEDA will use.
    propagationPolicy: foreground # Optional. Default: background. Kubernetes propagation policy for cleaning up existing jobs during rollout.
  scalingStrategy:
    strategy: "custom" # Optional. Default: default. Which Scaling Strategy to use.
    customScalingQueueLengthDeduction: 1 # Optional. A parameter to optimize custom ScalingStrategy.
    customScalingRunningJobPercentage: "0.5" # Optional. A parameter to optimize custom ScalingStrategy.
    pendingPodConditions: # Optional. A parameter to calculate pending job count per the specified pod conditions
      - "Ready"
      - "PodScheduled"
      - "AnyOtherCustomPodCondition"
    multipleScalersCalculation: "max" # Optional. Default: max. Specifies how to calculate the target metrics when multiple scalers are defined.
  triggers:
    - type: redis-streams
      metadata:
        address: knyl.me:6379 # Required if host and port are not provided. Format - host:port
        stream: keda-scaling-job # Required - name of the Redis Stream
        consumerGroup: dev # Required - name of consumer group associated with Redis Stream
        pendingEntriesCount: "10" # Required - number of entries in the Pending Entries List for the specified consumer group in the Redis Stream
        #enableTLS: "false" # optional
        databaseIndex: "2" # optional
        #addressFromEnv: REDIS_ADDRESS # Optional. You can use this instead of `address` parameter
        #hostFromEnv: REDIS_HOST # Optional. You can use this instead of `host` parameter
        #portFromEnv: REDIS_PORT # Optional. You can use this instead of `port` parameter
